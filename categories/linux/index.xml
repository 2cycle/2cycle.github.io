<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on ecycle</title>
    <link>https://2cycle.github.io/categories/linux/</link>
    <description>Recent content in linux on ecycle</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>kr-ko</language>
    <lastBuildDate>Wed, 23 Jan 2019 18:49:00 +0900</lastBuildDate>
    
	<atom:link href="https://2cycle.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ssl_Monitering</title>
      <link>https://2cycle.github.io/2019/ssl_monitering/</link>
      <pubDate>Wed, 23 Jan 2019 18:49:00 +0900</pubDate>
      
      <guid>https://2cycle.github.io/2019/ssl_monitering/</guid>
      <description>SSL 만료 확인 Let&amp;rsquo;s encrypt를 쓰면 자동 연장이 되지만 3개월마다 갱신이 되는 것에 대한 불안감과 1년 내로 사라질 서버들에 대해선 ssl 인증이 만료되는 것을 미리 알기 위해서 간단히 shell script를 만들어서 crontab에 등록해놓았다.
스크립트는 아주 간단한데
 먼저 ssl 위치를 확인하고 인증 만료 시간을 확인한다.  $ openssl x509 -in /etc/httpd/conf/ssl/인증서.crt   오늘 날짜를 가지고와서 notAfter 타임과 비교하여 차이를 구한다.
 조건 일자 이상인 경우 알림을 알린다. (필자의 경우 curl을 통해 post콜을 하였다.</description>
    </item>
    
    <item>
      <title>LinuxCommand_2</title>
      <link>https://2cycle.github.io/2019/linuxcommand_2/</link>
      <pubDate>Wed, 23 Jan 2019 18:29:03 +0900</pubDate>
      
      <guid>https://2cycle.github.io/2019/linuxcommand_2/</guid>
      <description>crontab 현재 실행중인 crontab list
# crontab -l  Crontab 편집
# crontab -e  다음과 같이 입력하면 vi처럼 편집할 수 있는 화면이 생긴다.
여기서 필요한 job들을 추가한 후 :wq로 저장하면 자동으로 crontab 에 job이 추가된다.
job설정 주기 결정 *	*	*	*	* (분) (시간) (일)	(월)	(요일)  분, 시간, 일 ,월, 요일 순이며 요일의 경우 0과 7이 일요일이며 1부터 월요일, 6이 토요일이다.
주기 예제 * * * * * 매분 실행 0 0 * * * 매일 자정 실행 0,30 * * 1-5 월요일부터 금요일까지 매시간 0분, 30분마다 실행 */10 * * * * 매 10분 마다 실행 */10 22,23 5-10 * * 5일에서 10일까지 22시, 23시 매 10분마다 실행  job example * * * * * /root/test/test.</description>
    </item>
    
    <item>
      <title>LinuxCommand_1</title>
      <link>https://2cycle.github.io/2019/linuxcommand_1/</link>
      <pubDate>Wed, 23 Jan 2019 17:41:10 +0900</pubDate>
      
      <guid>https://2cycle.github.io/2019/linuxcommand_1/</guid>
      <description>요 근래 회사에서 주로 진행한 업무는 check_mk 모니터링 및 SSL 만료확인용 shell script 를 만드는 것이었다.
리눅스 사용시 몇 개의 익숙한 명령문만 사용하였지만, 이번에 사용한 여러 명령문을 정리해보려고 한다.
리눅스 커널 확인 getconf getcong utility shall write to the standard output the value of the variable spcified by the system_var operand
즉 시스템 환경변수를 확인할 수 있는 명령문이다.
 -v [path_var, pathname, system_var]
아마도 구성된 변수를 결정하는 specific한 사양이나 버전을 표시하는 것 같다.</description>
    </item>
    
  </channel>
</rss>